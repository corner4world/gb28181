// Code generated by godddx, DO AVOID EDIT.
package proxy

import "github.com/ixugo/goddd/pkg/web"

type FindStreamProxyInput struct {
	web.PagerFilter
	App                       string `form:"app"`                          // 应用名
	Stream                    string `form:"stream"`                       // 流 id
	MediaServerID             string `form:"media_server_id"`              // 媒体服务器 id
	SourceURL                 string `form:"source_url"`                   // 原始 url
	TimeoutS                  int    `form:"timeout_s"`                    // 超时时间(秒)
	Transport                 int    `form:"transport"`                    // rtsp 拉流方式(0:udp;1:tcp)
	Enabled                   bool   `form:"enabled"`                      // 是否启用
	EnabledAudio              bool   `form:"enabled_audio"`                // 是否启用音频
	EnabledRemoveNoneReader   bool   `form:"enabled_remove_none_reader"`   // 是否无人观看时删除
	EnabledDisabledNoneReader bool   `form:"enabled_disabled_none_reader"` // 是否无人观看时禁用
	StreamKey                 string `form:"stream_key"`                   // 拉流代理时 zlm 返回的 key，用于停止拉流代理
	Pulling                   bool   `form:"pulling"`                      // 拉流状态
}

type EditStreamProxyInput struct {
	App                       string `json:"app"`                          // 应用名
	Stream                    string `json:"stream"`                       // 流 id
	MediaServerID             string `json:"media_server_id"`              // 媒体服务器 id
	SourceURL                 string `json:"source_url"`                   // 原始 url
	TimeoutS                  int    `json:"timeout_s"`                    // 超时时间(秒)
	Transport                 int    `json:"transport"`                    // rtsp 拉流方式(0:udp;1:tcp)
	Enabled                   bool   `json:"enabled"`                      // 是否启用
	EnabledAudio              bool   `json:"enabled_audio"`                // 是否启用音频
	EnabledRemoveNoneReader   bool   `json:"enabled_remove_none_reader"`   // 是否无人观看时删除
	EnabledDisabledNoneReader bool   `json:"enabled_disabled_none_reader"` // 是否无人观看时禁用
	StreamKey                 string `json:"stream_key"`                   // 拉流代理时 zlm 返回的 key，用于停止拉流代理
	Pulling                   bool   `json:"pulling"`                      // 拉流状态
}

type AddStreamProxyInput struct {
	App    string `json:"app"`    // 应用名
	Stream string `json:"stream"` // 流 id
	// MediaServerID             string `json:"media_server_id"`              // 媒体服务器 id
	SourceURL                 string `json:"source_url"`                   // 原始 url
	TimeoutS                  int    `json:"timeout_s"`                    // 超时时间(秒)
	Transport                 int    `json:"transport"`                    // rtsp 拉流方式(0:udp;1:tcp)
	Enabled                   bool   `json:"enabled"`                      // 是否启用
	EnabledAudio              bool   `json:"enabled_audio"`                // 是否启用音频
	EnabledRemoveNoneReader   bool   `json:"enabled_remove_none_reader"`   // 是否无人观看时删除
	EnabledDisabledNoneReader bool   `json:"enabled_disabled_none_reader"` // 是否无人观看时禁用
	StreamKey                 string `json:"stream_key"`                   // 拉流代理时 zlm 返回的 key，用于停止拉流代理
	Pulling                   bool   `json:"pulling"`                      // 拉流状态
}
